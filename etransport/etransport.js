
var url = "http://127.0.0.1:8080";

function transportIcon(type) {
	if (type == "bus") return "üöå";
	if (type == "tram") return "üöã";
	if (type == "troll") return "üöé";
	return "—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç";
}

function transportType(type) {
	if (type == "bus") return "–∞–≤—Ç–æ–±—É—Å";
	if (type == "tram") return "—Ç—Ä–∞–º–≤–∞–π";
	if (type == "troll") return "—Ç—Ä–æ–ª–ª–µ–π–±—É—Å";
	return "—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç";
}

function transportTypeGenetive(type) {
	if (type == "bus") return "–∞–≤—Ç–æ–±—É—Å–æ–≤";
	if (type == "tram") return "—Ç—Ä–∞–º–≤–∞–µ–≤";
	if (type == "troll") return "—Ç—Ä–æ–ª–ª–µ–π–±—É—Å–æ–≤";
	return "—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç";
}

function stopInfo(stop) {
	return transportIcon(stop.type)
		+ stop.names[0] + " –Ω–∞ " + stop.direction + "\n"
		+ (stop.reaches.length == 0
			? "–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è " + transportTypeGenetive(stop.type) + " –Ω–µ –±—É–¥–µ—Ç"
			: stop.reaches.map(function(x) {
				return (x.route.length == 2 ? " " : "") + x.route + "-–π " + transportType(stop.type) + (x.time == 0 ? " —É–∂–µ –ø–æ–¥—ä–µ–∑–∂–∞–µ—Ç" : " —á–µ—Ä–µ–∑ "+x.time +" –º–∏–Ω.")
			}).join("\n"));
}

function makeText(stopInfos) { return stopInfos.map(stopInfo).join("\n\n"); }

function getBus(name)   { return JSON.parse(http.get(  url+"/bus/get", { name : name })); }
function getTram(name)  { return JSON.parse(http.get( url+"/tram/get", { name : name })); }
function getTroll(name) { return JSON.parse(http.get(url+"/troll/get", { name : name })); }

function Hippo() {

	this.last = null;

	this.on_message = function(message) {
		if (message.text != null && message.text.length > 0) {

			message.text = message.text.substr(0, 40);

			if (this.last != null) {
				switch (message.text) {
					case 'üöå': message.text = this.last + "–∞–≤—Ç–æ–±—É—Å—ã"; break;
					case 'üöÉ': message.text = this.last + "—Ç—Ä–∞–º–≤–∞–∏"; break;
					case 'üöé': message.text = this.last + "—Ç—Ä–æ–ª–ª–µ–π–±—É—Å—ã"; break;
				}
			}

			var stopName = message.text.toLowerCase()
				.replace(/–∞–≤—Ç–æ–±—É—Å—ã?/, '')
				.replace(/—Ç—Ä–∞–º–≤–∞(–∏|–π)/, '')
				.replace(/—Ç—Ä–æ–ª–ª?–µ–π–±—É—Å—ã?/, '')
				.trim();

			this.last = stopName;

			if (/.*–∞–≤—Ç–æ–±—É—Å—ã?.*/.test(message.text)) {
				var stops = getBus(stopName);
				message.text = stops.length == 0
					? "–ù–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ '" + stopName + "' –∞–≤—Ç–æ–±—É—Å—ã –Ω–µ —Ö–æ–¥—è—Ç"
					: makeText(stops);
			} else
			if (/.*—Ç—Ä–∞–º–≤–∞(–∏|–π).*/.test(message.text)) {
				var stops = getTram(stopName);
				message.text = stops.length == 0
					? "–ù–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ '" + stopName + "' —Ç—Ä–∞–º–≤–∞–∏ –Ω–µ —Ö–æ–¥—è—Ç"
					: makeText(stops);
			} else
			if (/.*—Ç—Ä–æ–ª–ª?–µ–π–±—É—Å—ã?.*/.test(message.text)) {
				var stops = getTroll(stopName);
				message.text = stops.length == 0
					? "–ù–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ '" + stopName + "' —Ç—Ä–æ–ª–ª–µ–π–±—É—Å—ã –Ω–µ —Ö–æ–¥—è—Ç"
					: makeText(stops);
			} else {
				var tramStops = getTram(stopName);
				if (tramStops.length == 0) {
					var trollStops = getTroll(stopName);
					if (trollStops.length == 0) {
						var busStops = getBus(stopName);
						if (busStops.length == 0) {
							this.last = null;
							message.text = "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä\n'–î–æ–º –∫–∏–Ω–æ'";
						} else {
							message.text = makeText(busStops);
						}
					} else {
						message.text = makeText(trollStops);
					}
				} else {
					message.text = makeText(tramStops);
				}
			}
			message.keyboard = [
				["üöå", "üöÉ", "üöé"]
			];
		}
		else if(message.geo != null) {
			message.text = "–°–∫–æ—Ä–æ –¥–æ–±–∞–≤–∏–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–∏—Å–∫–∞ –ø–æ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏, –ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏";
		} else {
			this.last = null;
			message.text = "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä '–î–æ–º –∫–∏–Ω–æ'";
		}

		io.send(message);

		// cache buses for faster response
		getBus(stopName);
	}
}

